###############################################################################
# Base Configuration; this provides sane defaults for commonly used parts.
# -----------------------------------------------------------------------------
#
# Buildout instructions in this file are usually only changed by experienced
# developers.
#
# Beyond here there be dragons!

[buildout]
eggs-directory = eggs
download-cache = downloads
extends-cache = extends-cache

versions = versions

###############################################################################
# User configuration
# -----------------------------------------------------------------------------
# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = <%= @user %>
# This user will own the rest of the installation, and should be used to
# run buildout.
buildout-user = <%= @user %>


###############################################################################
# Package actuality
# -----------------------------------------------------------------------------
# Don't download new things unless needed to satisfy dependencies.
# Override this on the command line with the "-n" flag.
newest = <%= @newest %>


###############################################################################
# Package status
# -----------------------------------------------------------------------------
# Pick final releases over newer development releases.
prefer-final = <%= @prefer_final %>


###############################################################################
# Package unzipping
# -----------------------------------------------------------------------------
# Unzip all eggs for easier debugging
unzip = <%= @unzip %>


###############################################################################
# Download links for packages
# -----------------------------------------------------------------------------
# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    <% @find_links.each do |link| -%>
    <%= link %>
    <% end -%>


###############################################################################
# Extensions
# -----------------------------------------------------------------------------
# buildout.dumppickedversions notifies you of versions picked by buildout that
# were not specifically pinned.
# buildout.sanitycheck makes sure you're not running buildout as root.
extensions =
    <% @extensions.each do |extension| -%>
    <%= extension %>
    <% end -%>


###############################################################################
# var Directory
# -----------------------------------------------------------------------------
# Sets the target directory for the "var" components of the install such as
# database and log files.
var-dir=${buildout:directory}/var


###############################################################################
# Backup Directory
# -----------------------------------------------------------------------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
backups-dir=<%= @backups_dir %>


###############################################################################
# Initial User
# -----------------------------------------------------------------------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user=<%= @initial_user %>:<%= @initial_password %>


###############################################################################
# Environment Variables
# -----------------------------------------------------------------------------
# Some of the behavior of your Zope/Plone instances are controlled with OS
# environment variables. You may set those here in a key / value format.
# Some common settings:
#    * TZ allows you to set a time zone for systems where it's not
#      automatically available.
#    * zope_i18n_compile_mo_files allows for automatic compilation of
#      missing translation files (may slow startup).
#    * zope_i18n_allowed_languages allows you to limit the available
#      translations.
#    * PYTHON_EGG_CACHE determines where zipped python packages are unpacked
#      for use.
#    * PYTHONHASHSEED determines initial seed for hashes. "random" causes a
#      pseudo-random value is used to seed the hashes of str, bytes and datetime
#      objects.
environment-vars =
    <% @environment_vars.each do |item| -%>
    <%= item %>
    <% end -%>


###############################################################################
# ZEO Server
# ----------
# Use this section to install and configure a Zope Enterprise Objects server.
# For options see http://pypi.python.org/pypi/plone.recipe.zeoserver
[zeoserver_base]
# If we try to start as root, Zope will switch to the user below
effective-user = ${buildout:effective-user}
# Set storage
var = ${buildout:var-dir}
blob-storage = ${buildout:var-dir}/blobstorage
# Put the log, pid and socket files in var/zeoserver
zeo-log     = ${buildout:var-dir}/zeoserver/zeoserver.log
pid-file    = ${buildout:var-dir}/zeoserver/zeoserver.pid
socket-name = ${buildout:var-dir}/zeoserver/zeo.zdsock

[client_base]
# Use this section to install and configure a ZEO client
# instance.
# For options see http://pypi.python.org/pypi/plone.recipe.zope2instance

# The line below sets only the initial password. It will not change an
# existing password.
user = ${buildout:user}
# if we try to start as root, Zope will switch to the user below
effective-user = ${buildout:effective-user}
# change debug-mode to "on" to run in development mode.
# starting in foreground (fg) mode is a better way to do this.
debug-mode = off
# change verbose-security to "on" for detailed security
# errors while developing
verbose-security = ${buildout:verbose-security}
# change deprecation-warnings to "on" to get log warnings
# for deprecated usages.
deprecation-warnings = ${buildout:deprecation-warnings}

# base locations
var = ${buildout:var-dir}
blob-storage = ${:var}/blobstorage

# Comment the next four lines out if you don't need
# automatic log rotation for event and access logs.
event-log-max-size = 5 MB
event-log-old-files = 5
access-log-max-size = 20 MB
access-log-old-files = 5

# If you want Zope to know about any additional eggs, list them here.
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = ${buildout:zcml}

products = ${buildout:directory}/products

# You may also control the environment variables for the instance.
environment-vars = ${buildout:environment-vars}

zeo-client = true
# shared blobs are much faster if we're on the same server.
# if not, turn it off.
shared-blob = on

# defer early binding to port; may improve load balancer behavior on restarts
http-fast-listen = off

# Put the log, pid, lock files in var/client1
event-log = ${buildout:var-dir}/${:_buildout_section_name_}/event.log
z2-log    = ${buildout:var-dir}/${:_buildout_section_name_}/Z2.log
pid-file  = ${buildout:var-dir}/${:_buildout_section_name_}/${:_buildout_section_name_}.pid
lock-file = ${buildout:var-dir}/${:_buildout_section_name_}/${:_buildout_section_name_}.lock

[repozo]
# This recipe builds the repozo script for non-zeo installations.
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[backup]
# This recipe builds the backup, restore and snapshotbackup commands.
# For options see http://pypi.python.org/pypi/collective.recipe.backup
recipe = collective.recipe.backup
location = ${buildout:backups-dir}/backups
blobbackuplocation = ${buildout:backups-dir}/blobstoragebackups
snapshotlocation = ${buildout:backups-dir}/snapshotbackups
blobsnapshotlocation = ${buildout:backups-dir}/blobstoragesnapshots
datafs = ${buildout:var-dir}/filestorage/Data.fs
blob-storage = ${buildout:var-dir}/blobstorage

[zopepy]
# Installs a zopepy python interpreter that runs with your full Zope
# environment
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts = zopepy

[precompiler]
# This recipe is used in production installs to compile .py and .po files so
# that the daemon doesn't try to do it.
# For options see http://pypi.python.org/pypi/plone.recipe.precompiler
recipe = plone.recipe.precompiler
eggs = ${buildout:eggs}
compile-mo-files = true
extra-paths = ${buildout:directory}/products
